# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: elk-cluster
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ elk.node_name }}
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
node.roles: [{{ elk.node_roles }}]
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: /rbv/opt/elk/elasticsearch/data
#
# Path to log files:
#
path.logs: /elk/elasticsearch/logs
{% if rbv_elk_backup.stat.exists %}
path.repo: /elk/backup
{% else %}
#path.repo: /elk/backup
{% endif %}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# By default Elasticsearch is only accessible on localhost. Set a different
# address here to expose this node on the network:
#
network.host: ["{{ inventory_hostname }}"]
#
# By default Elasticsearch listens for HTTP traffic on the first free port it
# finds starting at 9200. Set a specific HTTP port here:
#
http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
# ??? correct?
discovery.seed_hosts: ["groups['elk_nodes']" | list]
#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#
#cluster.initial_master_nodes: ["master-node-01"]
#
# For more information, consult the discovery and cluster formation module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Allow wildcard deletion of indices:
#
#action.destructive_requires_name: false
#
cluster.routing.allocation.awareness.attributes: zone_id
cluster.routing.allocation.awareness.force.zone_id.values: zone1,zone2
#
node.attr.zone_id: {{ elk.zone_id }}
#
# The following setting enables RegEx for Painless. That funtionality is used for distinguishing logs in json format on the basis of paths.
#script.painless.regex.enabled: true

xpack:
  security:
    authc:
      realms:
        native:
          native1:
            enabled: false
        ldap:
          ldap1:
            order: 0
            cache.ttl: 1d
            ssl:
              certificate_authorities: ["/etc/elasticsearch/certs/ca.cer"]
            url: ["{{ ldaps_host }}"]
            bind_dn: "uid=elk_reader,cn=users,cn=compat,dc=bva,dc=adm,dc=itzbund,dc=net"
            secure_bind_password: "{{ keystore_ldap_pw }}"
            user_search:
              base_dn:
            group_search:
              base_dn:
    enabled: true

xpack.security.http.ssl.certificate_authorities: /etc/elasticsearch/certs/fullchain.cer
xpack.security.http.ssl.client_authentication: optional
xpack.security.http.ssl.enabled: true
xpack.security.http.ssl.keystore.path: /etc/elasticsearch/certs/cer.p12
xpack.security.http.ssl.verification_mode: full

xpack.security.transport.ssl.certificate_authorities: /etc/elasticsearch/certs/fullchain.cer
xpack.security.transport.ssl.client_authentication: optional
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.keystore.path: /etc/elasticsearch/certs/cer.p12
xpack.security.transport.ssl.verification_mode: full

ingest.geoip.downloader.enabled: false
